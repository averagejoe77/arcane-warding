name: Release Creation

on:
  push:
    tags:
      - '*'

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Update Version from Tag
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/}
          jq --arg version "$TAG_VERSION" '.version = $version' module.json > module.json.tmp && mv module.json.tmp module.json
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add module.json
          git commit -m "Automated version bump to $TAG_VERSION"
          git push origin HEAD:main

      - name: Get Module Info
        id: get_module_info
        run: |
          MODULE_ID=$(jq -r .id module.json)
          MODULE_VERSION=${GITHUB_REF#refs/tags/}
          MANIFEST_URL=$(jq -r .manifest module.json)
          echo "id=$MODULE_ID" >> $GITHUB_OUTPUT
          echo "version=$MODULE_VERSION" >> $GITHUB_OUTPUT
          echo "manifest_url=$MANIFEST_URL" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.get_module_info.outputs.version }}
          body: |
            This is an automated release of version ${{ steps.get_module_info.outputs.version }}.
          draft: false
          prerelease: false

      - name: Package Module
        run: |
          zip -r module.zip lang/ module.json scripts/ styles/ README.md LICENSE

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./module.zip
          asset_name: module.zip
          asset_content_type: application/zip

      - name: Upload Manifest
        id: upload-manifest
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./module.json
          asset_name: module.json
          asset_content_type: application/json

      - name: Release to Foundry VTT
        uses: illandril/FoundryVTT-package-release-action@v1
        with:
          package-release-token: ${{ secrets.PACKAGE_RELEASE_TOKEN }}
          manifest-url: ${{ steps.get_module_info.outputs.manifest_url }}
